{"version":3,"sources":["components/nav.js","components/player.js","components/song.js","data.js","components/librarySong.js","components/library.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","isActiveLibrary","setIsActiveLibrary","onClick","icon","faMusic","Player","currentSong","setCurrentSong","audioRef","isPlaying","setIsPlaying","songs","setSongs","songInfo","setSongInfo","getTime","time","Math","floor","slice","colorStyle","transform","animation","activeLibraryWhenSkip","nextPrev","newSong","map","song","id","active","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","className","currentTime","style","background","color","type","onChange","e","target","value","min","max","duration","size","faAngleLeft","faPause","faPlay","pause","faAngleRight","Song","src","cover","alt","name","artist","Data","audio","uuidv4","LibrarySong","newSongActive","Library","App","useState","useRef","endSong","ref","onTimeUpdate","percentage","round","console","log","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5a210c0.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\nconst Nav = ({isActiveLibrary ,setIsActiveLibrary}) => {\r\n  const onHandlerClick =()=> {\r\n    setIsActiveLibrary(!isActiveLibrary)\r\n  }\r\n  return (\r\n    <nav>\r\n      <h1>DJ <span>kabo</span>  </h1>\r\n      <button onClick={onHandlerClick} >\r\n        <FontAwesomeIcon icon={faMusic} /> library\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\nexport default Nav;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nconst Player = ({\r\n  currentSong,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  songs,\r\n  setSongs,\r\n  songInfo,\r\n  setSongInfo,\r\n}) => {\r\n  /******************************************************\r\n  =========function  components for time  control  =======\r\n  ******************************************************/\r\n  const onInputChange = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  function getTime(time) {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  }\r\n\r\n  //style input \r\n\r\n  const colorStyle = {\r\n    transform : `translateX(${songInfo.animation}%)`\r\n  }\r\n  /******************************************************\r\n  =========function  components for play control  =======\r\n  ******************************************************/\r\n  //play music function\r\n  const playSong = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n  //function active state for play music when skip\r\n\r\n  const activeLibraryWhenSkip = (nextPrev) => {\r\n    //to make active when i go to nex song\r\n    const newSong = songs.map((song) => {\r\n      if (song.id === nextPrev.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSong);\r\n  };\r\n  //skip function back and forward\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n      activeLibraryWhenSkip(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === \"skip-back\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        activeLibraryWhenSkip(songs[songs.length - 1]);\r\n\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n      activeLibraryWhenSkip(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div className=\"track\" style={{background:`linear-gradient(to right ,${currentSong.color[0]},${currentSong.color[1]} )`}} >\r\n          <input\r\n            type=\"range\"\r\n            onChange={onInputChange}\r\n            value={songInfo.currentTime}\r\n            min={0}\r\n            max={songInfo.duration}\r\n          />\r\n          <div className=\"track-animation\" style={colorStyle}> </div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n        />\r\n        <FontAwesomeIcon\r\n          size=\"2x\"\r\n          icon={!isPlaying ? faPlay : faPause}\r\n          onClick={playSong}\r\n        />\r\n        <FontAwesomeIcon\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Player;\r\n","const Song = ({ currentSong, isPlaying }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img\r\n        className={`${isPlaying ? \"img-active\" : \"\"}`}\r\n        src={currentSong.cover}\r\n        alt={currentSong.name}\r\n      />\r\n      <h3>{currentSong.name}</h3>\r\n      <h4>{currentSong.artist}</h4>\r\n    </div>\r\n  );\r\n};\r\nexport default Song;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nfunction Data() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default Data;\r\n","const LibrarySong = ({\r\n  audioRef,\r\n  isPlaying,\r\n  songs,\r\n  setSongs,\r\n  cover,\r\n  name,\r\n  artist,\r\n  song,\r\n  setCurrentSong,\r\n  id,\r\n}) => {\r\n  const onClickLibrarySong = () => {\r\n    setCurrentSong(song);\r\n    const newSongActive = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongActive);\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`library-song ${song.active ? \"active-song\" : \"\"}`}\r\n      onClick={onClickLibrarySong}\r\n    >\r\n      <img\r\n        src={cover}\r\n        alt={name}\r\n        \r\n      />\r\n      <div className=\"library-song__data\">\r\n        <h3>{name}</h3>\r\n        <h4>{artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default LibrarySong;\r\n","import LibrarySong from \"./librarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  isPlaying,\r\n  isActiveLibrary,\r\n  setCurrentSong,\r\n  setSongs,\r\n  audioRef\r\n}) => {\r\n  return (\r\n    <div className={`library  ${isActiveLibrary ? \"active-library\" : \"\"}`}>\r\n      <h1>your library</h1>\r\n\r\n      {songs.map((song) => (\r\n        <LibrarySong\r\n          song={song}\r\n          songs={songs}\r\n          cover={song.cover}\r\n          name={song.name}\r\n          artist={song.artist}\r\n          active={song.active}\r\n          key={song.id}\r\n          id={song.id}\r\n          setCurrentSong={setCurrentSong}\r\n          setSongs={setSongs}\r\n          isPlaying={isPlaying}\r\n          audioRef={audioRef}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Library;\r\n","import { useState, useRef } from \"react\";\nimport Nav from \"./components/nav\";\nimport Player from \"./components/player\";\nimport Song from \"./components/song\";\nimport Data from \"../src/data\";\n//import style\nimport \"./styles/App.scss\";\nimport Library from \"./components/library\";\n\nfunction App() {\n  const [songs, setSongs] = useState(Data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isActiveLibrary, setIsActiveLibrary] = useState(false);\n  const audioRef = useRef();\n\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animation: 0,\n  });\n\n  const timeHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n\n    const startTime = Math.round(current);\n    const endTime = Math.round(duration);\n    const percentage = Math.round((current / duration) * 100);\n\n    console.log(percentage);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      animation: percentage,\n    });\n  };\n\n  //when end music\n  const endSong = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n    return;\n  };\n\n  return (\n    <div className={`App ${isActiveLibrary? \"active-body\" : \"\"} ${isPlaying? \"active-app\" : \"\"}`}>\n      <Nav\n        isActiveLibrary={isActiveLibrary}\n        setIsActiveLibrary={setIsActiveLibrary}\n      />\n      <Song\n        currentSong={currentSong}\n        isPlaying={isPlaying}\n        setCurrentSong={setCurrentSong}\n      />\n      <Player\n        audioRef={audioRef}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        songs={songs}\n        setSongs={setSongs}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n      />\n      <Library\n        songs={songs}\n        setSongs={setSongs}\n        isActiveLibrary={isActiveLibrary}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        audioRef={audioRef}\n      />\n      <audio\n        ref={audioRef}\n        src={currentSong.audio}\n        onTimeUpdate={timeHandler}\n        onEnded={endSong}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}